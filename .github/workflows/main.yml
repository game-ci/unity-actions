name: Happy flow
on: [push]

jobs:
  requestManualActivationFile:
    runs-on: ubuntu-latest
    name: Request manual activation file
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure request manual activation file action
      - name: Request manual activation file
        uses: ./request-manual-activation-file
        id: getManualLicenseFile

      # Upload artifact
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    runs-on: ubuntu-latest
    name: Test the workflow actions
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure generic activation (local to the actions container)
      - name: Request activation
        uses: ./request-activation
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

  testRunnerInEditMode:
    runs-on: ubuntu-latest
    name: Test the workflow actions
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure test runner
      - name: Run tests
        uses: ./test-runner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_PROJECT: unity-project-with-correct-tests
          TEST_MODE: editmode

      # Upload artifact
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: artifacts/unity-project-with-correct-tests/editmode-results.xml

      # TODO - Verify that playmode-results does not exist

  testRunnerInPlayMode:
    runs-on: ubuntu-latest
    name: Test the workflow actions
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure test runner
      - name: Run tests
        uses: ./test-runner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_PROJECT: unity-project-with-correct-tests
          TEST_MODE: playmode

      # Upload artifact
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Test results (play mode)
          path: artifacts/unity-project-with-correct-tests/playmode-results.xml

      # TODO - Verify that editmode-results does not exist

  testRunnerInAllModes:
    runs-on: ubuntu-latest
    name: Test the workflow actions
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure test runner
      - name: Run tests
        uses: ./test-runner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_PROJECT: unity-project-with-correct-tests
          TEST_MODE: all

      # Upload artifacts
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: artifacts/unity-project-with-correct-tests/
